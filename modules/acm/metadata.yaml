# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-kubernetes-engine
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  title: Terraform Kubernetes Engine ACM Submodule
  source:
    repo: https://github.com/terraform-google-modules/terraform-google-kubernetes-engine
    sourceType: git
  version: 24.1.0
  actuationTool:
    type: Terraform
    version: '>= 0.13.0'
  examples:
  - name: deploy_service
    location: examples/deploy_service
  - name: disable_client_cert
    location: examples/disable_client_cert
  - name: node_pool
    location: examples/node_pool
  - name: node_pool_update_variant
    location: examples/node_pool_update_variant
  - name: node_pool_update_variant_beta
    location: examples/node_pool_update_variant_beta
  - name: node_pool_update_variant_public_beta
    location: examples/node_pool_update_variant_public_beta
  - name: private_zonal_with_networking
    location: examples/private_zonal_with_networking
  - name: regional_private_node_pool_oauth_scopes
    location: examples/regional_private_node_pool_oauth_scopes
  - name: safer_cluster
    location: examples/safer_cluster
  - name: safer_cluster_iap_bastion
    location: examples/safer_cluster_iap_bastion
  - name: shared_vpc
    location: examples/shared_vpc
  - name: simple_autopilot_private
    location: examples/simple_autopilot_private
  - name: simple_autopilot_private_non_default_sa
    location: examples/simple_autopilot_private_non_default_sa
  - name: simple_autopilot_public
    location: examples/simple_autopilot_public
  - name: simple_regional
    location: examples/simple_regional
  - name: simple_regional_beta
    location: examples/simple_regional_beta
  - name: simple_regional_private
    location: examples/simple_regional_private
  - name: simple_regional_private_beta
    location: examples/simple_regional_private_beta
  - name: simple_regional_with_gateway_api
    location: examples/simple_regional_with_gateway_api
  - name: simple_regional_with_kubeconfig
    location: examples/simple_regional_with_kubeconfig
  - name: simple_regional_with_networking
    location: examples/simple_regional_with_networking
  - name: simple_windows_node_pool
    location: examples/simple_windows_node_pool
  - name: simple_zonal_private
    location: examples/simple_zonal_private
  - name: simple_zonal_with_acm
    location: examples/simple_zonal_with_acm
  - name: simple_zonal_with_asm
    location: examples/simple_zonal_with_asm
  - name: simple_zonal_with_hub
    location: examples/simple_zonal_with_hub
  - name: simple_zonal_with_hub_kubeconfig
    location: examples/simple_zonal_with_hub_kubeconfig
  - name: stub_domains
    location: examples/stub_domains
  - name: stub_domains_private
    location: examples/stub_domains_private
  - name: stub_domains_upstream_nameservers
    location: examples/stub_domains_upstream_nameservers
  - name: terraform
    location: examples/acm-terraform-blog-part1/terraform
  - name: terraform
    location: examples/acm-terraform-blog-part2/terraform
  - name: terraform
    location: examples/acm-terraform-blog-part3/terraform
  - name: upstream_nameservers
    location: examples/upstream_nameservers
  - name: workload_identity
    location: examples/workload_identity
  - name: workload_metadata_config
    location: examples/workload_metadata_config
  variables:
  - name: cluster_membership_id
    description: The cluster membership ID. If unset, one will be autogenerated.
    type: string
    default: ""
    required: false
  - name: cluster_name
    description: GCP cluster Name used to reach cluster and which becomes the cluster name in the Config Sync kubernetes custom resource.
    type: string
    required: true
  - name: configmanagement_version
    description: Version of ACM.
    type: string
    default: ""
    required: false
  - name: create_ssh_key
    description: Controls whether a key will be generated for Git authentication
    type: bool
    default: true
    required: false
  - name: enable_fleet_feature
    description: Whether to enable the ACM feature on the fleet.
    type: bool
    default: true
    required: false
  - name: enable_fleet_registration
    description: Whether to create a new membership.
    type: bool
    default: true
    required: false
  - name: enable_log_denies
    description: Whether to enable logging of all denies and dryrun failures for ACM Policy Controller.
    type: bool
    default: false
    required: false
  - name: enable_policy_controller
    description: Whether to enable the ACM Policy Controller on the cluster
    type: bool
    default: true
    required: false
  - name: enable_referential_rules
    description: Enables referential constraints which reference another object in it definition and are therefore eventually consistent.
    type: bool
    default: true
    required: false
  - name: hierarchy_controller
    description: Configurations for Hierarchy Controller. See [Hierarchy Controller docs](https://cloud.google.com/anthos-config-management/docs/how-to/installing-hierarchy-controller) for more details
    type: map(any)
    required: false
  - name: https_proxy
    description: URL for the HTTPS proxy to be used when communicating with the Git repo.
    type: string
    required: false
  - name: install_template_library
    description: Whether to install the default Policy Controller template library
    type: bool
    default: true
    required: false
  - name: location
    description: GCP location used to reach cluster.
    type: string
    required: true
  - name: policy_dir
    description: Subfolder containing configs in ACM Git repo. If un-set, uses Config Management default.
    type: string
    default: ""
    required: false
  - name: project_id
    description: GCP project_id used to reach cluster.
    type: string
    required: true
  - name: secret_type
    description: git authentication secret type, is passed through to ConfigManagement spec.git.secretType. Overriden to value 'ssh' if `create_ssh_key` is true
    type: string
    default: ssh
    required: false
  - name: source_format
    description: Configures a non-hierarchical repo if set to 'unstructured'. Uses [ACM defaults](https://cloud.google.com/anthos-config-management/docs/how-to/installing#configuring-config-management-operator) when unset.
    type: string
    default: ""
    required: false
  - name: ssh_auth_key
    description: Key for Git authentication. Overrides 'create_ssh_key' variable. Can be set using 'file(path/to/file)'-function.
    type: string
    required: false
  - name: sync_branch
    description: ACM repo Git branch. If un-set, uses Config Management default.
    type: string
    default: ""
    required: false
  - name: sync_repo
    description: ACM Git repo address
    type: string
    required: true
  - name: sync_revision
    description: ACM repo Git revision. If un-set, uses Config Management default.
    type: string
    default: ""
    required: false
  outputs:
  - name: configmanagement_version
    description: Version of ACM installed.
  - name: git_creds_public
    description: Public key of SSH keypair to allow the Anthos Config Management Operator to authenticate to your Git repository.
  - name: wait
    description: An output to use when you want to depend on cmd finishing
  roles:
  - level: Project
    roles:
    - roles/cloudkms.admin
    - roles/cloudkms.cryptoKeyEncrypterDecrypter
    - roles/compute.networkAdmin
    - roles/compute.securityAdmin
    - roles/container.admin
    - roles/container.clusterAdmin
    - roles/container.developer
    - roles/iam.serviceAccountAdmin
    - roles/iam.serviceAccountUser
    - roles/compute.admin
    - roles/resourcemanager.projectIamAdmin
    - roles/composer.worker
    - roles/serviceusage.serviceUsageAdmin
    - roles/compute.osLogin
    - roles/compute.instanceAdmin
    - roles/iam.roleAdmin
    - roles/iap.admin
    - roles/gkehub.admin
  - level: Project
    roles:
    - roles/editor
    - roles/compute.admin
    - roles/container.admin
    - roles/resourcemanager.projectIamAdmin
    - roles/servicemanagement.admin
    - roles/serviceusage.serviceUsageAdmin
    - roles/iam.serviceAccountAdmin
    - roles/iam.serviceAccountKeyAdmin
    - roles/meshconfig.admin
    - roles/gkehub.admin
    - roles/privateca.admin
  services: []
